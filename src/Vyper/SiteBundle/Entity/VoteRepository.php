<?php

namespace Vyper\SiteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * VoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VoteRepository extends EntityRepository
{
    public function countVotes($picture)
    {
        $queryBuilder = $this->createQueryBuilder('v');
        $queryBuilder
            ->select('COUNT(v.picture) as nb')
            ->where('v.picture = :picture')
            ->setParameter('picture', $picture)
        ;

        $query = $queryBuilder->getQuery();
        $results = $query->getResult();

        return $results[0]['nb'];
    }

    public function ipAlreadyVoted($picture)
    {
        $queryBuilder = $this->createQueryBuilder('v');
        $queryBuilder
            ->select('COUNT(v.id) as nb')
            ->where('v.picture = :picture')
            ->andWhere('v.ip = :ip')
            ->setParameter('picture', $picture)
            ->setParameter('ip', $_SERVER['REMOTE_ADDR'])
        ;

        $query = $queryBuilder->getQuery();
        $results = $query->getResult();


        if ($results[0]['nb'] > 0) {
            return $readonly = true;
        } else {
            return $readonly = false;
        }
    }

    public function averageMark($picture)
    {
        if ($this->countVotes($picture) == 0) {
            return 0;
        } else {
            return $this->getSumMark($picture)/$this->countVotes($picture);
        }
    }

    private function getSumMark($picture)
    {
        $queryBuilder = $this->createQueryBuilder('v');
        $queryBuilder
            ->select('v.mark')
            ->where('v.picture = :picture')
            ->setParameter('picture', $picture)
        ;
        $query = $queryBuilder->getQuery();
        $results = $query->getResult();

        $sum = 0;
        foreach ($results as $rowMark) {
            $sum = $sum + $rowMark['mark'];
        }

        return $sum;
    }
}
