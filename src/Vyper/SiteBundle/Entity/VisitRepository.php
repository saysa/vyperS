<?php

namespace Vyper\SiteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * VisitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VisitRepository extends EntityRepository
{
    public function getArticleVisitByArticleId($articleID)
    {
        $queryBuilder = $this->createQueryBuilder('v');
        $queryBuilder
            ->where('v.article = :article_id')
            ->setParameter('article_id'     , $articleID)
        ;

        $query = $queryBuilder->getQuery();
        $results = $query->getResult();

        return $results;
    }

    public function findVisit($options, $item) {

        $earlier = new \DateTime('now');
        $earlier = $earlier->sub(new \DateInterval('PT1H'));

        $queryBuilder = $this->createQueryBuilder('v');
        $queryBuilder
            ->where('v.' . $item . ' = :' . $item)
            ->andWhere('v.ip = :ip')
            ->andWhere('v.created > :earlier')
            ->setParameter($item, $options['item'])
            ->setParameter('ip'     , $options['ip'])
            ->setParameter('earlier', $earlier)
        ;

        $query = $queryBuilder->getQuery();
        $results = $query->getResult();

        return $results;
    }

    public function showPopular()
    {
        $queryBuilder = $this->createQueryBuilder('v')
            ->select('v as item')
            ->addSelect('COUNT(v.article) as nb')
            ->join('v.article', 'article')
            ->addSelect('article')
            ->groupBy('v.article')
            ->orderBy('nb', 'DESC')
            ->setMaxResults(10);
        ;

        return $queryBuilder
            ->getQuery()
            ->getResult();
    }

    public function showPopularArtist()
    {
        $queryBuilder = $this->createQueryBuilder('v')
            ->select('v as item')
            ->addSelect('COUNT(v.artist) as nb')
            ->join('v.artist', 'artist')
            ->addSelect('artist')
            ->groupBy('v.artist')
            ->orderBy('nb', 'DESC')
            ->setMaxResults(10);
        ;

        return $queryBuilder
            ->getQuery()
            ->getResult();
    }

    public function showPopularDisco()
    {
        $queryBuilder = $this->createQueryBuilder('v')
            ->select('v as item')
            ->addSelect('COUNT(v.disco) as nb')
            ->join('v.disco', 'disco')
            ->addSelect('disco')
            ->groupBy('v.disco')
            ->orderBy('nb', 'DESC')
            ->setMaxResults(10);
        ;

        return $queryBuilder
            ->getQuery()
            ->getResult();
    }
}
